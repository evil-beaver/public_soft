
&НаСервере
Процедура ЗапуститьЗагрузкуНаСервере()
	
 ОбъектОбработка = РеквизитФормыВЗначение("Объект");
 ОбъектОбработка.ВыполнитьАвтоматическуюЗагрузкуПлатежейИзМонобанка();
 
КонецПроцедуры

&НаКлиенте
Процедура ЗапуститьЗагрузку(Команда)
	ЗапуститьЗагрузкуНаСервере();
КонецПроцедуры

&НаСервере
Процедура ПередЗакрытиемНаСервере()
	
	НастройкиЗагрузки = Новый Соответствие;
	НастройкиЗагрузки.Вставить("ТаблицаСчетов",Объект.СоответствиеСчетовБанка.Выгрузить());
	НастройкиЗагрузки.Вставить("СвойствоИдентификаторПлатежа",Объект.СвойствоИдентификаторПлатежа);
	НастройкиЗагрузки.Вставить("СтатьяДвиженияДенежныхСредствПокупатель",Объект.СтатьяДвиженияДенежныхСредствПокупатель);
	НастройкиЗагрузки.Вставить("СтатьяДвиженияДенежныхСредствПоставщик",Объект.СтатьяДвиженияДенежныхСредствПоставщик);
	НастройкиЗагрузки.Вставить("КонтрагентПокупательПоУмолчанию",Объект.КонтрагентПокупательПоУмолчанию);
	НастройкиЗагрузки.Вставить("КонтрагентПоставщикПоУмолчанию",Объект.КонтрагентПоставщикПоУмолчанию);
	
	ХранилищеОбщихНастроек.Сохранить("НастройкиЗагрузкиМоно","НастройкиЗагрузкиМоно",НастройкиЗагрузки,"НастройкиЗагрузкиМоно");
	
КонецПроцедуры

&НаКлиенте
Процедура ПередЗакрытием(Отказ, СтандартнаяОбработка)
	ПередЗакрытиемНаСервере();
КонецПроцедуры

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	НастройкиЗагрузки = ХранилищеОбщихНастроек.Загрузить("НастройкиЗагрузкиМоно","НастройкиЗагрузкиМоно","НастройкиЗагрузкиМоно");
	
	Если Не НастройкиЗагрузки = Неопределено Тогда
	
		Объект.СоответствиеСчетовБанка.Загрузить(НастройкиЗагрузки.Получить("ТаблицаСчетов"));
		Объект.СвойствоИдентификаторПлатежа = НастройкиЗагрузки.получить("СвойствоИдентификаторПлатежа");
		Объект.СтатьяДвиженияДенежныхСредствПоставщик = НастройкиЗагрузки.получить("СтатьяДвиженияДенежныхСредствПоставщик");
		Объект.СтатьяДвиженияДенежныхСредствПокупатель = НастройкиЗагрузки.получить("СтатьяДвиженияДенежныхСредствПокупатель");
        Объект.КонтрагентПокупательПоУмолчанию = НастройкиЗагрузки.получить("КонтрагентПокупательПоУмолчанию");
		Объект.КонтрагентПоставщикПоУмолчанию = НастройкиЗагрузки.получить("КонтрагентПоставщикПоУмолчанию");
	
	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура ПолучитьСписокДоступныхСчетовПользователя(Команда)
	
	ОповещениеОВыборе = Новый ОписаниеОповещения("ПродолжитьПолучениеСпискаСчетов",ЭтаФорма);
	
	ОткрытьФорму("ВнешняяОбработка.ЗагрузкаПлатежейИзМонобанка.Форма.ФормаЗапросаДанных",,,,,,ОповещениеОВыборе);
	
КонецПроцедуры

&НаКлиенте
Процедура ПродолжитьПолучениеСпискаСчетов(Токен,ДопПараметры)Экспорт

	Если ПустаяСтрока(Токен) Тогда
	
		Возврат;
	
	КонецЕсли;	
	
	ВыполнитьПолучениеДанныхСчетовНаСервере(Токен);
	
КонецПроцедуры

&НаСервере
Процедура ВыполнитьПолучениеДанныхСчетовНаСервере(Токен)
	
	 ОбъектОбработка = РеквизитФормыВЗначение("Объект");
 	 ТаблицаСчетов   = ОбъектОбработка.ПолучитьСписокБанковскихКартСчетовПользователя(Токен);
	 
	 Для каждого СтрокаТаблицы Из ТаблицаСчетов Цикл
	 
	 	 НоваяСтрока = Объект.СоответствиеСчетовБанка.Добавить();
		 ЗаполнитьЗначенияСвойств(НоваяСтрока,СтрокаТаблицы);
	 
	 КонецЦикла;

КонецПроцедуры

&НаСервере
Процедура СоздатьСвойствоИдентификаторТранзакцииНаСервере()
	
	ИмяРеквизита = "Идентифікатор транзації";
	
	СоздатьДопРеквизитНаСервере(ИмяРеквизита);
	
КонецПроцедуры

&НаКлиенте
Процедура СоздатьСвойствоИдентификаторТранзакции(Команда)
	СоздатьСвойствоИдентификаторТранзакцииНаСервере();
КонецПроцедуры


&НаСервере
Процедура СоздатьДопРеквизитНаСервере(ИмяРеквизита)
	
    //включим константу использования
    Если Не Константы.ИспользоватьДополнительныеРеквизитыИСведения.Получить() Тогда
        Константы.ИспользоватьДополнительныеРеквизитыИСведения.Установить(Истина);
    КонецЕсли;
	
	//попробуем найти реквизит по наименованию
	ДопРеквизитСсылка = ПланыВидовХарактеристик.ДополнительныеРеквизитыИСведения.НайтиПоНаименованию(ИмяРеквизита);
	Если НЕ ЗначениеЗаполнено(ДопРеквизитСсылка) Тогда
		//если не нашли реквизит - будем его создавать
		ДопРеквизитОбъект = ПланыВидовХарактеристик.ДополнительныеРеквизитыИСведения.СоздатьЭлемент();
		ДопРеквизитОбъект.Заголовок = ИмяРеквизита;
		ДопРеквизитОбъект.НаборСвойств = Справочники.НаборыДополнительныхРеквизитовИСведений.Справочник_Контрагенты;
		
		ДопРеквизитОбъект.ТипЗначения = Новый ОписаниеТипов("Строка",,,,Новый КвалификаторыСтроки(250));
		ДопРеквизитОбъект.Наименование = ДопРеквизитОбъект.Заголовок + " ("+ДопРеквизитОбъект.НаборСвойств+")";
		ДопРеквизитОбъект.Виден = Истина;
		ДопРеквизитОбъект.Доступен = Истина;
		ДопРеквизитОбъект.ДополнительныеЗначенияИспользуются = Истина;
		//зададим имя нового реквизита
		ДопРеквизитОбъект.Имя = СтрЗаменить(ИмяРеквизита," ","");
		ДопРеквизитОбъект.ЭтоДополнительноеСведение = Истина;

		ДопРеквизитОбъект.Записать();
		ДопРеквизитСсылка = ДопРеквизитОбъект.Ссылка;		
	КонецЕсли;
	
	ЗаполнитьСвойствоВНабор(Справочники.НаборыДополнительныхРеквизитовИСведений.Документ_ПоступлениеВКассу,ДопРеквизитСсылка);
	ЗаполнитьСвойствоВНабор(Справочники.НаборыДополнительныхРеквизитовИСведений.Документ_РасходИзКассы,ДопРеквизитСсылка);
	ЗаполнитьСвойствоВНабор(Справочники.НаборыДополнительныхРеквизитовИСведений.Документ_ПоступлениеНаСчет,ДопРеквизитСсылка);
	ЗаполнитьСвойствоВНабор(Справочники.НаборыДополнительныхРеквизитовИСведений.Документ_РасходСоСчета,ДопРеквизитСсылка);
	
	Объект.СвойствоИдентификаторПлатежа = ДопРеквизитСсылка;
    //добавим наш реквизит в набор дополнительных реквизитов контрагента
   	
КонецПроцедуры 

&НаСервере
Процедура ЗаполнитьСвойствоВНабор(НаборДополнительныхРеквизитовСсылка,ДопРеквизитСсылка)
	
	НаборДополнительныхРеквизитов = НаборДополнительныхРеквизитовСсылка.ПолучитьОбъект();
	
	Если НаборДополнительныхРеквизитов.ДополнительныеРеквизиты.Найти(ДопРеквизитСсылка, "Свойство") = Неопределено Тогда
		
		//добавим реквизит в набор
        Стр = НаборДополнительныхРеквизитов.ДополнительныеРеквизиты.Добавить();
        Стр.Свойство = ДопРеквизитСсылка;
		НаборДополнительныхРеквизитов.Записать();
		
	КонецЕсли;
   
КонецПроцедуры
